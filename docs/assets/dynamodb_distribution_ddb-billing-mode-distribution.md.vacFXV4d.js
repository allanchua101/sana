import{_ as i,o as a,c as e,R as t}from"./chunks/framework.KK7BHIzh.js";const m=JSON.parse('{"title":"sana ddb-billing-mode-distribution","description":"","frontmatter":{},"headers":[],"relativePath":"dynamodb/distribution/ddb-billing-mode-distribution.md","filePath":"dynamodb/distribution/ddb-billing-mode-distribution.md","lastUpdated":1702961152000}'),s={name:"dynamodb/distribution/ddb-billing-mode-distribution.md"},o=t(`<h1 id="sana-ddb-billing-mode-distribution" tabindex="-1"><code>sana ddb-billing-mode-distribution</code> <a class="header-anchor" href="#sana-ddb-billing-mode-distribution" aria-label="Permalink to &quot;\`sana ddb-billing-mode-distribution\`&quot;">​</a></h1><p>is used to get DynamoDB table distribution based on their billing mode</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> sana</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ddb-billing-mode-distribution</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> DynamoDB Table Distribution by Billing Mode</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> PAY_PER_REQUEST: 40 DynamoDB table (</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">40.00%</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> PROVISIONED: 60 DynamoDB table (</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">60.00%</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><h2 id="configuration-purpose" tabindex="-1">Configuration Purpose <a class="header-anchor" href="#configuration-purpose" aria-label="Permalink to &quot;Configuration Purpose&quot;">​</a></h2><p><code>BillingModeSummary.BillingMode</code> property is used to control how you are charged for read and write throughput and how you manage capacity for DynamoDBs.</p><h2 id="command-use-cases" tabindex="-1">Command Use-cases <a class="header-anchor" href="#command-use-cases" aria-label="Permalink to &quot;Command Use-cases&quot;">​</a></h2><ul><li>Misconfiguration and outlier detection</li><li>Quantification of DynamoDB tables that could throttle during traffic spikes</li><li>Quantification of DynamoDB tables that could easily be backed-up.</li><li>Quantification of DynamoDB tables that need promotion from provisioned to on-demand mode (<code>PAY_PER_REQUEST</code>) before backup could be done.</li></ul><h2 id="tips" tabindex="-1">Tips <a class="header-anchor" href="#tips" aria-label="Permalink to &quot;Tips&quot;">​</a></h2><ul><li>The cost of DynamoDB tables configured with <code>PROVISIONED</code> billing mode is lower.</li><li>DynamoDB tables configured with <code>PROVISIONED</code> billing mode may throw throttles during traffic spikes.</li><li><code>PROVISIONED</code> billing mode is better suited for applications with predictable and proven traffic size.</li><li>Its better to configure DynamoDB tables with <code>PAY_PER_REQUEST</code> option when building new applications to prevent throttles.</li></ul><h2 id="related-articles" tabindex="-1">Related Articles <a class="header-anchor" href="#related-articles" aria-label="Permalink to &quot;Related Articles&quot;">​</a></h2><ul><li><a href="https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/HowItWorks.ReadWriteCapacityMode.html" target="_blank" rel="noreferrer">DynamoDB read/write capacity mode</a></li></ul>`,11),n=[o];function l(d,r,h,c,p,b){return a(),e("div",null,n)}const g=i(s,[["render",l]]);export{m as __pageData,g as default};
